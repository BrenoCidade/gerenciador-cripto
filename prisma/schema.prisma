generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  wallets       Wallet[]
  notifications Notification[]
  role          Role           @default(USER)

  @@map("users")
}
enum Role {
  USER
  ADMIN
}

model Wallet {
  id           String        @id @default(uuid())
  address      String        @unique
  blockchain   String
  createdAt    DateTime      @default(now())
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  assets       Asset[]
  transactions Transaction[]

  @@map("wallets")
}

model Asset {
  id           String @id @default(uuid())
  name         String
  symbol       String
  balance      Float
  walletId     String
  wallet       Wallet @relation(fields: [walletId], references: [id])
  currentPrice Float?
  totalValue   Float?

  @@map("assets")
}

model Transaction {
  id        String   @id @default(uuid())
  txHash    String
  type      String
  amount    Float
  timestamp DateTime
  walletId  String
  wallet    Wallet   @relation(fields: [walletId], references: [id])

  @@map("transactions")
}

model Notification {
  id        String   @id @default(uuid())
  type      String
  threshold Float
  asset     String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@map("notifications")
}
